<html>
    <head>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f8f9fa;
        }

        .container {
            padding-top: 20px;
        }
    </style>
        <style>
        body {
            font-family: 'Arial', sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 20px;
        }

        .container {
            max-width: 800px;
            margin: auto;
            background: #fff;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        h1 {
            color: #333;
            text-align: center;
        }

        form {
            margin-top: 20px;
            margin-bottom: 20px;
        }

        label {
            display: block;
            margin-bottom: 5px;
        }

        input[type="text"],
        select {
            width: 100%;
            padding: 10px;
            margin-bottom: 20px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }

        button[type="submit"] {
            display: block;
            width: 100%;
            padding: 10px;
            background-color: #0056b3;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

            button[type="submit"]:hover {
                background-color: #004494;
            }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        table, th, td {
            border: 1px solid #ddd;
        }

        th, td {
            text-align: left;
            padding: 8px;
        }

        th {
            background-color: #f2f2f2;
        }

        tr:nth-child(even) {
            background-color: #f9f9f9;
        }

        .summary-container ul {
            list-style-type: disc; /* Use disc, circle, square, etc., as preferred */
            padding-left: 20px; /* Adjust padding to align the list */
        }

        .summary-container li {
            margin-bottom: 10px; /* Space out the bullet points */
        }
        </style>


    </head>

<body >


@using QueryCast;
@model MediaSearchViewModel


    @* Debugging in the view *@
    @{
        System.Diagnostics.Debug.WriteLine(Model.Categories);
        System.Diagnostics.Debug.WriteLine(Model.CategorySelectList);
    }






    
    <div class="col-lg-12">
        <div class="navbar-header">
            <table width="100%">
                <header class="container">
                <tr style="background-color:maroon">
                    <td width="50%" >
                        <a class="navbar-brand" href="Community Solar Project" title="Go Home">
                            <img src="~/img/IU-Luddy.png" class="mainLogo" alt="Idiana Logo" style="width:250px;height:120px;" />
                        </a>
                    </td>
                    <td width="50%" style="text-align:right;color:white">
<h6>
                        <strong>
                            Data Science In Practice
                        <br />
                        Summary Search for Media Insights
                        </strong>
                        </h6>
                    </td>
                </tr>
    </header>
                <tr style="background-color:powderblue">

                    <td colspan="2">


                        <strong>Select Category</strong>
                        @using (Html.BeginForm("Index", "Media", FormMethod.Post))
                        {

                            <select asp-for="SelectedCategory" asp-items="@Model.CategorySelectList">
                                <option value="">Chat Gpt Meetings</option>
                                <option value="">Framework and Library Differences</option>
                                <option value="">Vector Databases</option>
                                <option value="">Lang Chain</option>

                            </select>


                            <!-- Other form elements like text input for questions -->
                            @*  <input type="submit" value="Search" />   *@

                        }

                        @* @using (Html.BeginForm("Index", "Media", FormMethod.Post, new { @class = "mb-3" }))
                        {
                            <div class="mb-3">
                                <select asp-for="SelectedCategory" asp-items="@Model.CategorySelectList" class="form-select">
                                    <option value="">Select a Category</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label for="UserQuestion" class="form-label">Ask a question:</label>
                                <input type="text" class="form-control" id="UserQuestion" name="UserQuestion" value="@Model.UserQuestion">
                            </div>
                            <button type="submit" class="btn btn-primary w-100">Search</button>
                        } *@

                        
                        <form asp-action="Index" method="post">
                        <div>
                                @* <label for="UserQuestion"><strong>Need information? Ask away!</strong></label> *@
                                <strong>Need information? Ask away!</strong>
                        <input type="text" id="UserQuestion" name="UserQuestion" value="@Model.UserQuestion" />
                        <button type="submit">Search</button>
                        </div>
                        </form>


                        @if (Model.MediaFiles.Any())
                        {

                            <div class="mt-4">
                                <h3>Results</h3>
                                @foreach (var file in Model.MediaFiles)
                                {
                                    <div class="card mt-3">
                                        <div class="card-body">
                                            <h5 class="card-title"><u>@file.Category</u></h5>
                                            <h6 class="card-subtitle mb-2 text-muted">@Html.Raw(file.Filetype) Transcript:</h6>
                                            <p class="card-text">@Html.Raw(file.EnhancedTranscript)</p>

                                            <h6 class="card-subtitle mb-2 text-muted">Summary:</h6>
                                            @if (!string.IsNullOrEmpty(file.Summary))
                                            {
                                                <ul>
                                                    @foreach (var line in file.Summary.Split(new[] { "\n" }, StringSplitOptions.RemoveEmptyEntries))
                                                    {
                                                        <li>@line</li>
                                                    }
                                                </ul>
                                            }

                                            <p class="card-text"><small>Score: @file.Score</small></p>
                                        </div>
                                    </div>
                                }
                            </div>

                        }
                        @if (!string.IsNullOrEmpty(Model.Answer))
                        {

                            <div class="alert alert-info mt-4" id="answer">
                                <h4>Answer</h4>
                                <p>@Model.Answer</p>
                                <button class="btn btn-secondary" onclick="speakText()">🔊 Listen</button>
                            </div>
                        }


                        <script>
                            function speakText() {
                                console.log("In function");
                                var synth = window.speechSynthesis;
                                var utterThis = new SpeechSynthesisUtterance(document.getElementById('answer').innerText);
                                synth.speak(utterThis);
                            }
                        </script>




                    </td>


                </tr>



            </table>




        </body>


</html>